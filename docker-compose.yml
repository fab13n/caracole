version: "3"

services:
  db:
    image: postgres
    environment:
      - POSTGRES_USER=${SUPERUSER_USERNAME}
      - POSTGRES_PASSWORD=${SUPERUSER_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DBNAME}
      - POSTGRES_HOST
      - POSTGRES_PORT
      - PGDATA=/pgdata
    volumes:
      - ${VOLUMES}/postgresql:/pgdata
      - ${VOLUMES}/shared:/shared
    ports:
      - 1235:5432

  django_prod: &django_prod
    image: solalim
    build: .
    command: gunicorn solalim.wsgi --log-level debug --bind 0.0.0.0:8000
    restart: unless-stopped
    volumes:
      - ./manage.py:/home/solalim/manage.py
      - ./uwsgi.ini:/home/solalim/uwsgi.ini
      - ./solalim:/home/solalim/solalim
      - ./floreal:/home/solalim/floreal
      - ./pages:/home/solalim/pages
      - ./villes:/home/solalim/villes
      - ./search:/home/solalim/search
      - ./customize_wagtail:/home/solalim/customize_wagtail

      - ${VOLUMES}/database.sqlite3:/home/solalim/database.sqlite3
      - ${VOLUMES}/logs:/home/solalim/logs
      - ${VOLUMES}/media:/home/solalim/media
      - ${VOLUMES}/static:/home/solalim/static
    environment:
      - SUPERUSER_PASSWORD
      - SUPERUSER_USERNAME
      - SUPERUSER_EMAIL
      - POSTGRES_USER=${SUPERUSER_USERNAME}
      - POSTGRES_PASSWORD=${SUPERUSER_PASSWORD}
      - POSTGRES_DBNAME
      - POSTGRES_HOST
      - POSTGRES_PORT
      - DJANGO_SETTINGS_MODULE=solalim.settings
      - DJANGO_SECRET_KEY
      - PUBLIC_HTTP_PORT
      - PUBLIC_HTTPS_PORT
      - PUBLIC_HOST
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_USER
      - SMTP_PASSWORD
      - DEBUG
    depends_on:
      - db

  dev:
    <<: *django_prod
    command: ./manage.py runserver 0.0.0.0:8000
    restart: "no"
    volumes:
      - ./manage.py:/home/solalim/manage.py
      - ./uwsgi.ini:/home/solalim/uwsgi.ini
      - ./solalim:/home/solalim/solalim
      - ./floreal:/home/solalim/floreal
      - ./pages:/home/solalim/pages
      - ./villes:/home/solalim/villes
      - ./search:/home/solalim/search
      - ./customize_wagtail:/home/solalim/customize_wagtail
      # - ${VOLUMES}/database.sqlite3:/home/solalim/database.sqlite3
      - ${VOLUMES}/media:/home/solalim/media
      - ${VOLUMES}/shared:/shared
    environment:
      - SUPERUSER_PASSWORD
      - SUPERUSER_USERNAME
      - SUPERUSER_EMAIL
      - POSTGRES_USER=${SUPERUSER_USERNAME}
      - POSTGRES_PASSWORD=${SUPERUSER_PASSWORD}
      - POSTGRES_DBNAME
      - POSTGRES_HOST
      - POSTGRES_PORT
      - DJANGO_SETTINGS_MODULE=solalim.settings
      - DJANGO_SECRET_KEY
      - PUBLIC_HTTP_PORT
      - PUBLIC_HTTPS_PORT
      - PUBLIC_HOST
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_USER
      - SMTP_PASSWORD
      - DEBUG=True
    ports:
      - 1234:8000

  init:
    <<: *django_prod
    restart: no
    volumes:
      - ./manage.py:/home/solalim/manage.py
      - ./solalim:/home/solalim/solalim
      - ./floreal:/home/solalim/floreal
      - ./pages:/home/solalim/pages
      - ./villes:/home/solalim/villes
      - ./search:/home/solalim/search
      - ./customize_wagtail:/home/solalim/customize_wagtail
      - ${VOLUMES}/static:/home/solalim/static
    command: ./solalim/initialize.sh

  prod:
    image: nginx
    restart: unless-stopped
    ports:
      - ${PUBLIC_HTTP_PORT}:80
      - ${PUBLIC_HTTPS_PORT}:443
    volumes:
      - ${VOLUMES}/${PUBLIC_PROTO}.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - ${VOLUMES}/static:/var/www/solalim/static
      - ${VOLUMES}/media:/var/www/solalim/media
      - ${VOLUMES}/certbot/www:/var/www/certbot
      - ${VOLUMES}/maintenance:/var/www/maintenance
    depends_on:
      - django_prod

  # https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ${VOLUMES}/certbot/conf:/etc/letsencrypt
      - ${VOLUMES}/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  certbot_nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${VOLUMES}/certbot/conf:/etc/letsencrypt
      - ${VOLUMES}/certbot/www:/var/www/certbot
      - ${VOLUMES}/certbot/default.conf:/etc/nginx/conf.d/default.conf
